enum DeployStatus {
  SUCCESS
  PENDING
  FAILURE
  NONE
}

type FrontendArtifacts {
  turnkey: [String!]
  reactsdk: [String!]
  websdk: [String!]
}

enum FrontendBuildType {
  TURNKEY
  REACTSDK
  REACTSDKESBUILD
  REACTSDKESBUILDGO
  WEBSDK
}

type HerokuStatus {
  status: DeployStatus!
  message: String!
  url: String!
  appname: String!
}

type Mutation {
  createProject(product_name: String!, preset: ProjectPreset!): Project!
  generateApiKey(project_id: ID!): ProjectApikey!
  publishToHeroku(project_id: ID!): HerokuStatus!
  publishToVercel(project_id: ID!): VercelStatus!
  buildFrontend(project_id: ID!, preset: FrontendBuildType!): String!
}

type Project {
  id: ID!
  product_id: String!
  product_name: String!
  app_id: String!
  api_key: String!
  backend_app_id: String!
  app_certificate: String!
  primary_color: String!
  frontend_endpoint: String!
  backend_endpoint: String!
  pstn: Boolean!
  precall: Boolean!
  primary_logo: String!
  primary_square_logo: String!
  primary_background_logo: String!
  chat: Boolean!
  project_template: ProjectPreset!
  cloud_recording: Boolean!
  screen_sharing: Boolean!
  encryption_enabled: Boolean!
  landing_sub_heading: String!
  primary_font_color: String!
  secondary_font_color: String!
  sentry_dsn: String!
  enable_google_oauth: Boolean!
  enable_apple_oauth: Boolean!
  enable_slack_oauth: Boolean!
  enable_microsoft_oauth: Boolean!
  google_client_id: String!
  google_client_secret: String!
  microsoft_client_id: String!
  microsoft_client_secret: String!
  slack_client_id: String!
  slack_client_secret: String!
  apple_client_id: String!
  apple_private_key: String!
  apple_key_id: String!
  apple_team_id: String!
  customer_id: String!
  customer_certificate: String!
  bucket_name: String!
  recording_region: Int!
  bucket_access_key: String!
  bucket_access_secret: String!
  pstn_email: String!
  pstn_password: String!
  pstn_account: String!
  video_profile: String!
  frontend_deploy_status: DeployStatus!
  backend_deploy_status: DeployStatus!
  created_at: Time!
  updated_at: Time!
  log_enabled: Boolean!
  geo_fencing: Boolean!
  event_mode: Boolean!
  raise_hand: Boolean!
}

type ProjectApikey {
  project_id: String!
  api_key: String!
}

enum ProjectPreset {
  MEETING
  EVENTS
}

type Query {
  projects(project_id: ID): [Project!]!
  source_code(project_id: ID!): SourceCodeArchive!
  user: User!
  heroku(project_id: ID!): HerokuStatus!
  vercel(project_id: ID!): VercelStatus!
  frontendArtifacts(project_id: ID!): FrontendArtifacts!
}

type SourceCodeArchive {
  npm_package: String!
  theme: String!
  config: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format
outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates
and times using the Gregorian calendar.
"""
scalar Time

type User {
  email: String!
}

type VercelStatus {
  status: DeployStatus!
  message: String!
  url: String!
  appname: String!
}

type _Service {
  sdl: String!
}
