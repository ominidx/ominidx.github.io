"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8428],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>k});var n=r(67294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(r),k=l,y=u["".concat(s,".").concat(k)]||u[k]||c[k]||i;return r?n.createElement(y,a(a({ref:t},d),{},{components:r})):n.createElement(y,a({ref:t},d))}));function k(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=r.length,a=new Array(i);a[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,a[1]=o;for(var p=2;p<i;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},71087:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var n=r(87462),l=(r(67294),r(3905));const i={},a="Create JWT  token (Server - Server call)",o={type:"api",id:"create-jwt-token-server-server-call",unversionedId:"create-jwt-token-server-server-call",title:"Create JWT  token (Server - Server call)",description:"",slug:"/create-jwt-token-server-server-call",frontMatter:{},api:{description:"Creates a JWT token for a user id based on project id / api key (Server - Server call). If user id is not provided in the request, a random `user_id` will be generated",operationId:"tokenGenerate",parameters:[{name:"X-API-KEY",in:"header",description:"API key to be generated via app-builder console",required:!0,style:"simple",explode:!1,schema:{type:"string"},example:"ACoexample"}],requestBody:{description:"Generate a token (Server - Server call)",content:{"application/json":{schema:{type:"object",properties:{user_id:{type:"string",description:"Any unique id of an user as identity"}}}}}},responses:{200:{description:"success",content:{"application/json":{schema:{required:["token"],type:"object",properties:{token:{type:"string",example:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcHBfaWQiOiJhYjFmZTQ5NGFiNjA0ZmRmYWZiZjYzYzY0Yzg2ZDE5NCIsInVzZXJfaWQiOiJqb2UyMzQ2MiIsInByb2plY3RfaWQiOiJkdW1teXByb2plY3QiLCJjdXN0b21lcl9pZCI6ImI3NzIwMDg5NjQ3ZjQ0NWI5MDdiYmM1NzE2MDE3MGI5IiwiZXhwIjoxNjYxMjQzMzY4fQ.kI-Y0hFbldPN1XQ3jzh6FvSTnL6s01C1zPkKaWR8fPw"}}}}}},400:{description:"invalid input or request body"}},method:"post",path:"/token/generate",servers:[{description:"SwaggerHub API Auto Mocking",url:"https://managedservices-dev.rteappbuilder.com/"}],jsonRequestBodyExample:{user_id:"string"},info:{description:"REST API - DEV ENV - https://managedservices-dev.rteappbuilder.com/",version:"v1",title:"Managed CORE Service"},postman:{name:"Create JWT  token (Server - Server call)",description:{content:"Creates a JWT token for a user id based on project id / api key (Server - Server call). If user id is not provided in the request, a random `user_id` will be generated",type:"text/plain"},url:{path:["token","generate"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{description:{content:"(Required) API key to be generated via app-builder console",type:"text/plain"},key:"X-API-KEY",value:"<string>"},{key:"Content-Type",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'{\n    "user_id": "<string>"\n}'}}},source:"@site/openapi.json",sourceDirName:".",permalink:"/api/create-jwt-token-server-server-call",previous:{title:"Create meeting Channel",permalink:"/api/create-meeting-channel"},next:{title:"Refresh JWT  token with",permalink:"/api/refresh-jwt-token-with"}},s=[],p={toc:s};function d(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"create-jwt--token-server---server-call"},"Create JWT  token (Server - Server call)"),(0,l.kt)("p",null,"Creates a JWT token for a user id based on project id / api key (Server - Server call). If user id is not provided in the request, a random ",(0,l.kt)("inlineCode",{parentName:"p"},"user_id")," will be generated"),(0,l.kt)("table",{style:{display:"table",width:"100%"}},(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",{style:{textAlign:"left"}},"Header Parameters"))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"X-API-KEY"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,l.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"API key to be generated via app-builder console")),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: ACoexample"))))),(0,l.kt)("table",{style:{display:"table",width:"100%"}},(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",{style:{textAlign:"left"}},"Request Body ",(0,l.kt)("div",null,(0,l.kt)("p",null,"Generate a token (Server - Server call)"))))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"user_id"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"Any unique id of an user as identity")))))),(0,l.kt)("table",{style:{display:"table",width:"100%"}},(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",{style:{textAlign:"left"}},"Responses"))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("div",{style:{display:"flex"}},(0,l.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,l.kt)("code",null,"200")),(0,l.kt)("div",null,(0,l.kt)("p",null,"success"))),(0,l.kt)("div",null,(0,l.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",{style:{textAlign:"left"}},"Schema ",(0,l.kt)("div",null)))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"token"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,l.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED")))))))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("div",{style:{display:"flex"}},(0,l.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,l.kt)("code",null,"400")),(0,l.kt)("div",null,(0,l.kt)("p",null,"invalid input or request body"))),(0,l.kt)("div",null))))))}d.isMDXComponent=!0}}]);